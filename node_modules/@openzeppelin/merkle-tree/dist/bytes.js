"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.compare = exports.concat = exports.toHex = exports.toBytes = void 0;
const utils_1 = require("ethereum-cryptography/utils");
function toBytes(value) {
    if (value instanceof Uint8Array) {
        return value;
    }
    else if (typeof value === 'string') {
        return (0, utils_1.hexToBytes)(value);
    }
    else {
        return new Uint8Array(value);
    }
}
exports.toBytes = toBytes;
function toHex(value) {
    if (typeof value === 'string') {
        (0, utils_1.hexToBytes)(value); // assert hex string
        return value.replace(/^(0x)?/, '0x');
    }
    else if (value instanceof Uint8Array) {
        return '0x' + (0, utils_1.bytesToHex)(value);
    }
    else {
        return '0x' + (0, utils_1.bytesToHex)(new Uint8Array(value));
    }
}
exports.toHex = toHex;
function concat(values) {
    return (0, utils_1.concatBytes)(...values.map(toBytes));
}
exports.concat = concat;
function compare(a, b) {
    const diff = BigInt(toHex(a)) - BigInt(toHex(b));
    return diff > 0 ? 1 : diff < 0 ? -1 : 0;
}
exports.compare = compare;
//# sourceMappingURL=bytes.js.map